{"/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/test.js":"/* istanbul instrument in package npmtest_generator_react_fullstack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/lib.npmtest_generator_react_fullstack.js":"/* istanbul instrument in package npmtest_generator_react_fullstack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_generator_react_fullstack = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_generator_react_fullstack = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-generator-react-fullstack && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_generator_react_fullstack */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_generator_react_fullstack\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_generator_react_fullstack.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_generator_react_fullstack.rollup.js'] =\n            local.assetsDict['/assets.npmtest_generator_react_fullstack.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_generator_react_fullstack.__dirname + '/lib.npmtest_generator_react_fullstack.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/app/index.js":"'use strict';\n\nvar path = require('path');\nvar yeoman = require('yeoman-generator');\nvar chalk = require('chalk');\nvar yosay = require('yosay');\nvar glob = require('glob');\n\nmodule.exports = yeoman.generators.Base.extend({\n\n  initializing: function () {\n    this.sourceRoot(path.join(this.sourceRoot(), '../../react-starter-kit'));\n  },\n\n  prompting: function () {\n    this.log(yosay(\n      'Welcome to the primo ' + chalk.green('React Starter Kit') + ' generator!'\n    ));\n  },\n\n  writing: function () {\n    var done = this.async();\n    glob('**/*', { cwd: this.sourceRoot(), dot: true }, function (err, files) {\n      if (err) {\n        this.log('Error:', err.message);\n        return done();\n      }\n      files.forEach(function (file) {\n        var dest = file;\n        if (file === 'npmignore') {\n          dest = '.' + file;\n        }\n        this.fs.copy(\n          this.templatePath(file),\n          this.destinationPath(dest)\n        );\n      }, this);\n      done();\n    }.bind(this));\n  },\n\n  install: function () {\n    this.npmInstall();\n  }\n\n});\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/client.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport 'babel-polyfill';\nimport ReactDOM from 'react-dom';\nimport FastClick from 'fastclick';\nimport Router from './routes';\nimport Location from './core/Location';\nimport { addEventListener, removeEventListener } from './core/DOMUtils';\n\nlet cssContainer = document.getElementById('css');\nconst appContainer = document.getElementById('app');\nconst context = {\n  insertCss: styles => styles._insertCss(),\n  onSetTitle: value => (document.title = value),\n  onSetMeta: (name, content) => {\n    // Remove and create a new <meta /> tag in order to make it work\n    // with bookmarks in Safari\n    const elements = document.getElementsByTagName('meta');\n    Array.from(elements).forEach((element) => {\n      if (element.getAttribute('name') === name) {\n        element.parentNode.removeChild(element);\n      }\n    });\n    const meta = document.createElement('meta');\n    meta.setAttribute('name', name);\n    meta.setAttribute('content', content);\n    document\n      .getElementsByTagName('head')[0]\n      .appendChild(meta);\n  },\n};\n\n// Google Analytics tracking. Don't send 'pageview' event after the first\n// rendering, as it was already sent by the Html component.\nlet trackPageview = () => (trackPageview = () => window.ga('send', 'pageview'));\n\nfunction render(state) {\n  Router.dispatch(state, (newState, component) => {\n    ReactDOM.render(component, appContainer, () => {\n      // Restore the scroll position if it was saved into the state\n      if (state.scrollY !== undefined) {\n        window.scrollTo(state.scrollX, state.scrollY);\n      } else {\n        window.scrollTo(0, 0);\n      }\n\n      trackPageview();\n\n      // Remove the pre-rendered CSS because it's no longer used\n      // after the React app is launched\n      if (cssContainer) {\n        cssContainer.parentNode.removeChild(cssContainer);\n        cssContainer = null;\n      }\n    });\n  });\n}\n\nfunction run() {\n  let currentLocation = null;\n  let currentState = null;\n\n  // Make taps on links and buttons work fast on mobiles\n  FastClick.attach(document.body);\n\n  // Re-render the app when window.location changes\n  const unlisten = Location.listen(location => {\n    currentLocation = location;\n    currentState = Object.assign({}, location.state, {\n      path: location.pathname,\n      query: location.query,\n      state: location.state,\n      context,\n    });\n    render(currentState);\n  });\n\n  // Save the page scroll position into the current location's state\n  const supportPageOffset = window.pageXOffset !== undefined;\n  const isCSS1Compat = ((document.compatMode || '') === 'CSS1Compat');\n  const setPageOffset = () => {\n    currentLocation.state = currentLocation.state || Object.create(null);\n    if (supportPageOffset) {\n      currentLocation.state.scrollX = window.pageXOffset;\n      currentLocation.state.scrollY = window.pageYOffset;\n    } else {\n      currentLocation.state.scrollX = isCSS1Compat ?\n        document.documentElement.scrollLeft : document.body.scrollLeft;\n      currentLocation.state.scrollY = isCSS1Compat ?\n        document.documentElement.scrollTop : document.body.scrollTop;\n    }\n  };\n\n  addEventListener(window, 'scroll', setPageOffset);\n  addEventListener(window, 'pagehide', () => {\n    removeEventListener(window, 'scroll', setPageOffset);\n    unlisten();\n  });\n}\n\n// Run the application when both DOM is ready and page content is loaded\nif (['complete', 'loaded', 'interactive'].includes(document.readyState) && document.body) {\n  run();\n} else {\n  document.addEventListener('DOMContentLoaded', run, false);\n}\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/config.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* eslint-disable max-len */\n/* jscs:disable maximumLineLength */\n\nexport const port = process.env.PORT || 3000;\nexport const host = process.env.WEBSITE_HOSTNAME || `localhost:${port}`;\n\nexport const databaseUrl = process.env.DATABASE_URL || 'postgresql://demo:Lqk62xg6TBm5UhfR@demo.ctbl5itzitm4.us-east-1.rds.amazonaws.com:5432/membership01';\n\nexport const analytics = {\n\n  // https://analytics.google.com/\n  google: { trackingId: process.env.GOOGLE_TRACKING_ID || 'UA-XXXXX-X' },\n\n};\n\nexport const auth = {\n\n  jwt: { secret: process.env.JWT_SECRET || 'React Starter Kit' },\n\n  // https://developers.facebook.com/\n  facebook: {\n    id: process.env.FACEBOOK_APP_ID || '186244551745631',\n    secret: process.env.FACEBOOK_APP_SECRET || 'a970ae3240ab4b9b8aae0f9f0661c6fc',\n  },\n\n  // https://cloud.google.com/console/project\n  google: {\n    id: process.env.GOOGLE_CLIENT_ID || '251410730550-ahcg0ou5mgfhl8hlui1urru7jn5s12km.apps.googleusercontent.com',\n    secret: process.env.GOOGLE_CLIENT_SECRET || 'Y8yR9yZAhm9jQ8FKAL8QIEcd',\n  },\n\n  // https://apps.twitter.com/\n  twitter: {\n    key: process.env.TWITTER_CONSUMER_KEY || 'Ie20AZvLJI2lQD5Dsgxgjauns',\n    secret: process.env.TWITTER_CONSUMER_SECRET || 'KTZ6cxoKnEakQCeSpZlaUCJWGAlTEBJj0y2EMkUBujA7zWSvaQ',\n  },\n\n};\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/routes.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Router from 'react-routing/src/Router';\nimport fetch from './core/fetch';\nimport App from './components/App';\nimport ContentPage from './components/ContentPage';\nimport NotFoundPage from './components/NotFoundPage';\nimport ErrorPage from './components/ErrorPage';\n\nconst routes = [\n  require('./routes/home'),\n  require('./routes/contact'),\n  require('./routes/login'),\n  require('./routes/register'),\n];\n\nconst router = new Router(on => {\n  on('*', async (state, next) => {\n    const component = await next();\n    return component && <App context={state.context}>{component}</App>;\n  });\n\n  routes.forEach(route => {\n    on(route.path, route.action);\n  });\n\n  on('*', async (state) => {\n    const query = `/graphql?query={content(path:\"${state.path}\"){path,title,content,component}}`;\n    const response = await fetch(query);\n    const { data } = await response.json();\n    return data && data.content && <ContentPage {...data.content} />;\n  });\n\n  on('error', (state, error) => state.statusCode === 404 ?\n    <App context={state.context} error={error}><NotFoundPage /></App> :\n    <App context={state.context} error={error}><ErrorPage /></App>\n  );\n});\n\nexport default router;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/server.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport 'babel-polyfill';\nimport path from 'path';\nimport express from 'express';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport expressJwt from 'express-jwt';\nimport expressGraphQL from 'express-graphql';\nimport jwt from 'jsonwebtoken';\nimport ReactDOM from 'react-dom/server';\nimport PrettyError from 'pretty-error';\nimport passport from './core/passport';\nimport schema from './data/schema';\nimport Router from './routes';\nimport assets from './assets';\nimport { port, auth, analytics } from './config';\n\nconst server = global.server = express();\n\n//\n// Tell any CSS tooling (such as Material UI) to use all vendor prefixes if the\n// user agent is not known.\n// -----------------------------------------------------------------------------\nglobal.navigator = global.navigator || {};\nglobal.navigator.userAgent = global.navigator.userAgent || 'all';\n\n//\n// Register Node.js middleware\n// -----------------------------------------------------------------------------\nserver.use(express.static(path.join(__dirname, 'public')));\nserver.use(cookieParser());\nserver.use(bodyParser.urlencoded({ extended: true }));\nserver.use(bodyParser.json());\n\n//\n// Authentication\n// -----------------------------------------------------------------------------\nserver.use(expressJwt({\n  secret: auth.jwt.secret,\n  credentialsRequired: false,\n  /* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\n  getToken: req => req.cookies.id_token,\n  /* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */\n}));\nserver.use(passport.initialize());\n\nserver.get('/login/facebook',\n  passport.authenticate('facebook', { scope: ['email', 'user_location'], session: false })\n);\nserver.get('/login/facebook/return',\n  passport.authenticate('facebook', { failureRedirect: '/login', session: false }),\n  (req, res) => {\n    const expiresIn = 60 * 60 * 24 * 180; // 180 days\n    const token = jwt.sign(req.user, auth.jwt.secret, { expiresIn });\n    res.cookie('id_token', token, { maxAge: 1000 * expiresIn, httpOnly: true });\n    res.redirect('/');\n  }\n);\n\n//\n// Register API middleware\n// -----------------------------------------------------------------------------\nserver.use('/graphql', expressGraphQL(req => ({\n  schema,\n  graphiql: true,\n  rootValue: { request: req },\n  pretty: process.env.NODE_ENV !== 'production',\n})));\n\n//\n// Register server-side rendering middleware\n// -----------------------------------------------------------------------------\nserver.get('*', async (req, res, next) => {\n  try {\n    let statusCode = 200;\n    const template = require('./views/index.jade');\n    const data = { title: '', description: '', css: '', body: '', entry: assets.main.js };\n\n    if (process.env.NODE_ENV === 'production') {\n      data.trackingId = analytics.google.trackingId;\n    }\n\n    const css = [];\n    const context = {\n      insertCss: styles => css.push(styles._getCss()),\n      onSetTitle: value => (data.title = value),\n      onSetMeta: (key, value) => (data[key] = value),\n      onPageNotFound: () => (statusCode = 404),\n    };\n\n    await Router.dispatch({ path: req.path, query: req.query, context }, (state, component) => {\n      data.body = ReactDOM.renderToString(component);\n      data.css = css.join('');\n    });\n\n    res.status(statusCode);\n    res.send(template(data));\n  } catch (err) {\n    next(err);\n  }\n});\n\n//\n// Error handling\n// -----------------------------------------------------------------------------\nconst pe = new PrettyError();\npe.skipNodeFiles();\npe.skipPackage('express');\n\nserver.use((err, req, res, next) => { // eslint-disable-line no-unused-vars\n  console.log(pe.render(err)); // eslint-disable-line no-console\n  const template = require('./views/error.jade');\n  const statusCode = err.status || 500;\n  res.status(statusCode);\n  res.send(template({\n    message: err.message,\n    stack: process.env.NODE_ENV === 'production' ? '' : err.stack,\n  }));\n});\n\n//\n// Launch the server\n// -----------------------------------------------------------------------------\nserver.listen(port, () => {\n  /* eslint-disable no-console */\n  console.log(`The server is running at http://localhost:${port}/`);\n});\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/bundle.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport webpack from 'webpack';\nimport webpackConfig from './webpack.config';\n\n/**\n * Creates application bundles from the source files.\n */\nfunction bundle() {\n  return new Promise((resolve, reject) => {\n    webpack(webpackConfig).run((err, stats) => {\n      if (err) {\n        return reject(err);\n      }\n\n      console.log(stats.toString(webpackConfig[0].stats));\n      return resolve();\n    });\n  });\n}\n\nexport default bundle;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/clean.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport del from 'del';\nimport fs from './lib/fs';\n\n/**\n * Cleans up the output (build) directory.\n */\nasync function clean() {\n  await del(['.tmp', 'build/*', '!build/.git'], { dot: true });\n  await fs.makeDir('build/public');\n}\n\nexport default clean;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/copy.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport path from 'path';\nimport gaze from 'gaze';\nimport replace from 'replace';\nimport Promise from 'bluebird';\n\n/**\n * Copies static files such as robots.txt, favicon.ico to the\n * output (build) folder.\n */\nasync function copy({ watch } = {}) {\n  const ncp = Promise.promisify(require('ncp'));\n\n  await Promise.all([\n    ncp('src/public', 'build/public'),\n    ncp('src/content', 'build/content'),\n    ncp('package.json', 'build/package.json'),\n  ]);\n\n  replace({\n    regex: '\"start\".*',\n    replacement: '\"start\": \"node server.js\"',\n    paths: ['build/package.json'],\n    recursive: false,\n    silent: false,\n  });\n\n  if (watch) {\n    const watcher = await new Promise((resolve, reject) => {\n      gaze('src/content/**/*.*', (err, val) => err ? reject(err) : resolve(val));\n    });\n    watcher.on('changed', async (file) => {\n      const relPath = file.substr(path.join(__dirname, '../src/content/').length);\n      await ncp(`src/content/${relPath}`, `build/content/${relPath}`);\n    });\n  }\n}\n\nexport default copy;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/deploy.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport GitRepo from 'git-repository';\nimport run from './run';\nimport fetch from './lib/fetch';\n\n// TODO: Update deployment URL\n// For more information visit http://gitolite.com/deploy.html\nconst getRemote = (slot) => ({\n  name: slot || 'production',\n  url: `https://example${slot ? `-${slot}` : ''}.scm.azurewebsites.net:443/example.git`,\n  website: `http://example${slot ? `-${slot}` : ''}.azurewebsites.net`,\n});\n\n/**\n * Deploy the contents of the `/build` folder to a remote\n * server via Git. Example: `npm run deploy -- production`\n */\nasync function deploy() {\n  // By default deploy to the staging deployment slot\n  const remote = getRemote(process.argv.includes('--production') ? null : 'staging');\n\n  // Initialize a new Git repository inside the `/build` folder\n  // if it doesn't exist yet\n  const repo = await GitRepo.open('build', { init: true });\n  await repo.setRemote(remote.name, remote.url);\n\n  // Fetch the remote repository if it exists\n  if ((await repo.hasRef(remote.url, 'master'))) {\n    await repo.fetch(remote.name);\n    await repo.reset(`${remote.name}/master`, { hard: true });\n    await repo.clean({ force: true });\n  }\n\n  // Build the project in RELEASE mode which\n  // generates optimized and minimized bundles\n  process.argv.push('--release');\n  await run(require('./build'));\n\n  // Push the contents of the build folder to the remote server via Git\n  await repo.add('--all .');\n  await repo.commit('Update');\n  await repo.push(remote.name, 'master');\n\n  // Check if the site was successfully deployed\n  const response = await fetch(remote.website);\n  console.log(`${remote.website} -> ${response.statusCode}`);\n}\n\nexport default deploy;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/run.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nfunction format(time) {\n  return time.toTimeString().replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '$1');\n}\n\nfunction run(fn, options) {\n  const task = typeof fn.default === 'undefined' ? fn : fn.default;\n  const start = new Date();\n  console.log(`[${format(start)}] Starting '${task.name}'...`);\n  return task(options).then(() => {\n    const end = new Date();\n    const time = end.getTime() - start.getTime();\n    console.log(`[${format(end)}] Finished '${task.name}' after ${time} ms`);\n  });\n}\n\nif (process.mainModule.children.length === 0 && process.argv.length > 2) {\n  delete require.cache[__filename];\n  const module = require(`./${process.argv[2]}.js`).default;\n  run(module).catch(err => console.error(err.stack));\n}\n\nexport default run;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/runServer.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport path from 'path';\nimport cp from 'child_process';\nimport webpackConfig from './webpack.config';\n\n// Should match the text string used in `src/server.js/server.listen(...)`\nconst RUNNING_REGEXP = /The server is running at http:\\/\\/(.*?)\\//;\n\nlet server;\nconst { output } = webpackConfig.find(x => x.target === 'node');\nconst serverPath = path.join(output.path, output.filename);\n\n// Launch or restart the Node.js server\nfunction runServer(cb) {\n  function onStdOut(data) {\n    const time = new Date().toTimeString();\n    const match = data.toString('utf8').match(RUNNING_REGEXP);\n\n    process.stdout.write(time.replace(/.*(\\d{2}:\\d{2}:\\d{2}).*/, '[$1] '));\n    process.stdout.write(data);\n\n    if (match) {\n      server.stdout.removeListener('data', onStdOut);\n      server.stdout.on('data', x => process.stdout.write(x));\n      if (cb) {\n        cb(null, match[1]);\n      }\n    }\n  }\n\n  if (server) {\n    server.kill('SIGTERM');\n  }\n\n  server = cp.spawn('node', [serverPath], {\n    env: Object.assign({ NODE_ENV: 'development' }, process.env),\n    silent: false,\n  });\n\n  server.stdout.on('data', onStdOut);\n  server.stderr.on('data', x => process.stderr.write(x));\n}\n\nprocess.on('exit', () => {\n  if (server) {\n    server.kill('SIGTERM');\n  }\n});\n\nexport default runServer;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/start.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport Browsersync from 'browser-sync';\nimport webpack from 'webpack';\nimport webpackMiddleware from 'webpack-middleware';\nimport webpackHotMiddleware from 'webpack-hot-middleware';\nimport run from './run';\nimport runServer from './runServer';\nimport webpackConfig from './webpack.config';\nimport clean from './clean';\nimport copy from './copy';\n\nconst DEBUG = !process.argv.includes('--release');\n\n/**\n * Launches a development web server with \"live reload\" functionality -\n * synchronizing URLs, interactions and code changes across multiple devices.\n */\nasync function start() {\n  await run(clean);\n  await run(copy.bind(undefined, { watch: true }));\n  await new Promise(resolve => {\n    // Patch the client-side bundle configurations\n    // to enable Hot Module Replacement (HMR) and React Transform\n    webpackConfig.filter(x => x.target !== 'node').forEach(config => {\n      if (Array.isArray(config.entry)) {\n        config.entry.unshift('webpack-hot-middleware/client');\n      } else {\n        /* eslint-disable no-param-reassign */\n        config.entry = ['webpack-hot-middleware/client', config.entry];\n        /* eslint-enable no-param-reassign */\n      }\n\n      config.plugins.push(new webpack.HotModuleReplacementPlugin());\n      config.plugins.push(new webpack.NoErrorsPlugin());\n      config\n        .module\n        .loaders\n        .filter(x => x.loader === 'babel-loader')\n        .forEach(x => (x.query = { // eslint-disable-line no-param-reassign\n          // Wraps all React components into arbitrary transforms\n          // https://github.com/gaearon/babel-plugin-react-transform\n          plugins: [\n            ['react-transform', {\n              transforms: [\n                {\n                  transform: 'react-transform-hmr',\n                  imports: ['react'],\n                  locals: ['module'],\n                }, {\n                  transform: 'react-transform-catch-errors',\n                  imports: ['react', 'redbox-react'],\n                },\n              ],\n            },\n            ],\n          ],\n        }));\n    });\n\n    const bundler = webpack(webpackConfig);\n    const wpMiddleware = webpackMiddleware(bundler, {\n\n      // IMPORTANT: webpack middleware can't access config,\n      // so we should provide publicPath by ourselves\n      publicPath: webpackConfig[0].output.publicPath,\n\n      // Pretty colored output\n      stats: webpackConfig[0].stats,\n\n      // For other settings see\n      // https://webpack.github.io/docs/webpack-dev-middleware\n    });\n    const hotMiddlewares = bundler\n      .compilers\n      .filter(compiler => compiler.options.target !== 'node')\n      .map(compiler => webpackHotMiddleware(compiler));\n\n    let handleServerBundleComplete = () => {\n      runServer((err, host) => {\n        if (!err) {\n          const bs = Browsersync.create();\n          bs.init({\n            ...(DEBUG ? {} : { notify: false, ui: false }),\n\n            proxy: {\n              target: host,\n              middleware: [wpMiddleware, ...hotMiddlewares],\n            },\n\n            // no need to watch '*.js' here, webpack will take care of it for us,\n            // including full page reloads if HMR won't work\n            files: ['build/content/**/*.*'],\n          }, resolve);\n          handleServerBundleComplete = runServer;\n        }\n      });\n    };\n\n    bundler.plugin('done', () => handleServerBundleComplete());\n  });\n}\n\nexport default start;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/webpack.config.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport path from 'path';\nimport webpack from 'webpack';\nimport extend from 'extend';\nimport AssetsPlugin from 'assets-webpack-plugin';\n\nconst DEBUG = !process.argv.includes('--release');\nconst VERBOSE = process.argv.includes('--verbose');\nconst AUTOPREFIXER_BROWSERS = [\n  'Android 2.3',\n  'Android >= 4',\n  'Chrome >= 35',\n  'Firefox >= 31',\n  'Explorer >= 9',\n  'iOS >= 7',\n  'Opera >= 12',\n  'Safari >= 7.1',\n];\nconst GLOBALS = {\n  'process.env.NODE_ENV': DEBUG ? '\"development\"' : '\"production\"',\n  __DEV__: DEBUG,\n};\n\n//\n// Common configuration chunk to be used for both\n// client-side (client.js) and server-side (server.js) bundles\n// -----------------------------------------------------------------------------\n\nconst config = {\n  output: {\n    publicPath: '/',\n    sourcePrefix: '  ',\n  },\n\n  cache: DEBUG,\n  debug: DEBUG,\n\n  stats: {\n    colors: true,\n    reasons: DEBUG,\n    hash: VERBOSE,\n    version: VERBOSE,\n    timings: true,\n    chunks: VERBOSE,\n    chunkModules: VERBOSE,\n    cached: VERBOSE,\n    cachedAssets: VERBOSE,\n  },\n\n  plugins: [\n    new webpack.optimize.OccurenceOrderPlugin(),\n  ],\n\n  resolve: {\n    extensions: ['', '.webpack.js', '.web.js', '.js', '.jsx', '.json'],\n  },\n\n  module: {\n    loaders: [\n      {\n        test: /\\.jsx?$/,\n        include: [\n          path.resolve(__dirname, '../node_modules/react-routing/src'),\n          path.resolve(__dirname, '../src'),\n        ],\n        loader: 'babel-loader',\n      }, {\n        test: /\\.scss$/,\n        loaders: [\n          'isomorphic-style-loader',\n          `css-loader?${DEBUG ? 'sourceMap&' : 'minimize&'}modules&localIdentName=` +\n          `${DEBUG ? '[name]_[local]_[hash:base64:3]' : '[hash:base64:4]'}`,\n          'postcss-loader?parser=postcss-scss',\n        ],\n      }, {\n        test: /\\.json$/,\n        loader: 'json-loader',\n      }, {\n        test: /\\.txt$/,\n        loader: 'raw-loader',\n      }, {\n        test: /\\.(png|jpg|jpeg|gif|svg|woff|woff2)$/,\n        loader: 'url-loader?limit=10000',\n      }, {\n        test: /\\.(eot|ttf|wav|mp3)$/,\n        loader: 'file-loader',\n      }, {\n        test: /\\.jade$/,\n        loader: 'jade-loader',\n      },\n    ],\n  },\n\n  postcss: function plugins(bundler) {\n    return [\n      require('postcss-import')({ addDependencyTo: bundler }),\n      require('precss')(),\n      require('autoprefixer')({ browsers: AUTOPREFIXER_BROWSERS }),\n    ];\n  },\n};\n\n//\n// Configuration for the client-side bundle (client.js)\n// -----------------------------------------------------------------------------\n\nconst clientConfig = extend(true, {}, config, {\n  entry: './src/client.js',\n  output: {\n    path: path.join(__dirname, '../build/public'),\n    filename: DEBUG ? '[name].js?[hash]' : '[name].[hash].js',\n  },\n\n  // Choose a developer tool to enhance debugging\n  // http://webpack.github.io/docs/configuration.html#devtool\n  devtool: DEBUG ? 'cheap-module-eval-source-map' : false,\n  plugins: [\n    ...config.plugins,\n    new webpack.DefinePlugin({ ...GLOBALS, 'process.env.BROWSER': true }),\n    new AssetsPlugin({\n      path: path.join(__dirname, '../build'),\n      filename: 'assets.js',\n      processOutput: x => `module.exports = ${JSON.stringify(x)};`,\n    }),\n    ...(!DEBUG ? [\n      new webpack.optimize.DedupePlugin(),\n      new webpack.optimize.UglifyJsPlugin({\n        compress: {\n          // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n          screw_ie8: true,\n\n          // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n          warnings: VERBOSE,\n        },\n      }),\n      new webpack.optimize.AggressiveMergingPlugin(),\n    ] : []),\n  ],\n});\n\n//\n// Configuration for the server-side bundle (server.js)\n// -----------------------------------------------------------------------------\n\nconst serverConfig = extend(true, {}, config, {\n  entry: './src/server.js',\n  output: {\n    path: './build',\n    filename: 'server.js',\n    libraryTarget: 'commonjs2',\n  },\n  target: 'node',\n  externals: [\n    /^\\.\\/assets$/,\n    function filter(context, request, cb) {\n      const isExternal =\n        request.match(/^[@a-z][a-z\\/\\.\\-0-9]*$/i) &&\n        !request.match(/^react-routing/) &&\n        !context.match(/[\\\\/]react-routing/);\n      cb(null, Boolean(isExternal));\n    },\n  ],\n  node: {\n    console: false,\n    global: false,\n    process: false,\n    Buffer: false,\n    __filename: false,\n    __dirname: false,\n  },\n  devtool: 'source-map',\n  plugins: [\n    ...config.plugins,\n    new webpack.DefinePlugin({ ...GLOBALS, 'process.env.BROWSER': false }),\n    new webpack.BannerPlugin('require(\"source-map-support\").install();',\n      { raw: true, entryOnly: false }),\n  ],\n});\n\nexport default [clientConfig, serverConfig];\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/components/withViewport.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport EventEmitter from 'eventemitter3';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\n\nlet EE;\nlet viewport = { width: 1366, height: 768 }; // Default size for server-side rendering\nconst RESIZE_EVENT = 'resize';\n\nfunction handleWindowResize() {\n  if (viewport.width !== window.innerWidth || viewport.height !== window.innerHeight) {\n    viewport = { width: window.innerWidth, height: window.innerHeight };\n    EE.emit(RESIZE_EVENT, viewport);\n  }\n}\n\nfunction withViewport(ComposedComponent) {\n  return class WithViewport extends Component {\n\n    constructor() {\n      super();\n\n      this.state = {\n        viewport: canUseDOM ? { width: window.innerWidth, height: window.innerHeight } : viewport,\n      };\n    }\n\n    componentDidMount() {\n      if (!EE) {\n        EE = new EventEmitter();\n        window.addEventListener('resize', handleWindowResize);\n        window.addEventListener('orientationchange', handleWindowResize);\n      }\n\n      EE.on(RESIZE_EVENT, this.handleResize, this);\n    }\n\n    componentWillUnmount() {\n      EE.removeListener(RESIZE_EVENT, this.handleResize, this);\n      if (!EE.listeners(RESIZE_EVENT, true)) {\n        window.removeEventListener('resize', handleWindowResize);\n        window.removeEventListener('orientationchange', handleWindowResize);\n        EE = null;\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} viewport={this.state.viewport} />;\n    }\n\n    handleResize(value) {\n      this.setState({ viewport: value }); // eslint-disable-line react/no-set-state\n    }\n\n  };\n}\n\nexport default withViewport;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/constants/ActionTypes.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport keyMirror from 'fbjs/lib/keyMirror';\n\nexport default keyMirror({\n\n});\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/core/db.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport db from 'pg';\nimport Promise from 'bluebird';\nimport { databaseUrl } from '../config';\n\n// TODO: Customize database connection settings\n/* jscs:disable requireCamelCaseOrUpperCaseIdentifiers */\ndb.defaults.ssl = true;\ndb.defaults.poolSize = 2;\ndb.defaults.application_name = 'RSK';\n/* jscs:enable requireCamelCaseOrUpperCaseIdentifiers */\n\n/**\n * Promise-based wrapper for pg.Client\n * https://github.com/brianc/node-postgres/wiki/Client\n */\nfunction AsyncClient(client) {\n  this.client = client;\n  this.query = this.query.bind(this);\n  this.end = this.end.bind(this);\n}\n\nAsyncClient.prototype.query = function query(sql, ...args) {\n  return new Promise((resolve, reject) => {\n    if (args.length) {\n      this.client.query(sql, args, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    } else {\n      this.client.query(sql, (err, result) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(result);\n        }\n      });\n    }\n  });\n};\n\nAsyncClient.prototype.end = function end() {\n  this.client.end();\n};\n\n/**\n * Promise-based wrapper for pg.connect()\n * https://github.com/brianc/node-postgres/wiki/pg\n */\ndb.connect = (connect => callback => new Promise((resolve, reject) => {\n  connect.call(db, databaseUrl, (err, client, done) => {\n    if (err) {\n      if (client) {\n        done(client);\n      }\n\n      reject(err);\n    } else {\n      callback(new AsyncClient(client)).then(() => {\n        done();\n        resolve();\n      }).catch(error => {\n        done(client);\n        reject(error);\n      });\n    }\n  });\n}))(db.connect);\n\nexport default db;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/core/DOMUtils.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nexport function addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent(`on${event}`, listener);\n  }\n}\n\nexport function removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent(`on${event}`, listener);\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/core/Location.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport createHistory from 'history/lib/createBrowserHistory';\nimport createMemoryHistory from 'history/lib/createMemoryHistory';\nimport useQueries from 'history/lib/useQueries';\n\nconst location = useQueries(process.env.BROWSER ? createHistory : createMemoryHistory)();\n\nexport default location;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/core/passport.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Passport.js reference implementation.\n * The database schema used in this sample is available at\n * https://github.com/membership/membership.db/tree/master/postgres\n */\n\nimport passport from 'passport';\nimport { Strategy as FacebookStrategy } from 'passport-facebook';\nimport db from './db';\nimport { auth as config } from '../config';\n\n/**\n * Sign in with Facebook.\n */\npassport.use(new FacebookStrategy({\n  clientID: config.facebook.id,\n  clientSecret: config.facebook.secret,\n  callbackURL: '/login/facebook/return',\n  profileFields: ['name', 'email', 'link', 'locale', 'timezone'],\n  passReqToCallback: true,\n}, (req, accessToken, refreshToken, profile, done) => {\n  const loginName = 'facebook';\n  db.connect(async ({ query }) => {\n    if (req.user) {\n      let result = await query(\n        'SELECT 1 FROM user_login WHERE name = $1 AND key = $2',\n        loginName, profile.id\n      );\n      if (result.rowCount) {\n        // There is already a Facebook account that belongs to you.\n        // Sign in with that account or delete it, then link it with your current account.\n        done();\n      } else {\n        await query(`\n          INSERT INTO user_account (id, email) SELECT $1, $2::character\n            WHERE NOT EXISTS (SELECT 1 FROM user_account WHERE id = $1);`,\n          req.user.id, profile._json.email);\n        await query(`\n          INSERT INTO user_login (user_id, name, key) VALUES ($1, 'facebook', $2);`,\n          req.user.id, profile.id);\n        await query(`\n          INSERT INTO user_claim (user_id, type, value) VALUES\n            ($1, 'urn:facebook:access_token', $3);`,\n          req.user.id, profile.id);\n        await query(`\n          INSERT INTO user_profile (user_id) SELECT $1\n            WHERE NOT EXISTS (SELECT 1 FROM user_profile WHERE user_id = $1);`,\n          req.user.id);\n        await query(`\n          UPDATE user_profile SET\n            display_name = COALESCE(NULLIF(display_name, ''), $2),\n            gender       = COALESCE(NULLIF(gender, ''), $3),\n            picture      = COALESCE(NULLIF(picture, ''), $4),\n          WHERE user_id = $1;`,\n          req.user.id, profile.displayName, profile._json.gender,\n          `https://graph.facebook.com/${profile.id}/picture?type=large`);\n        result = await query(`\n          SELECT id, email FROM user_account WHERE id = $1;`,\n          req.user.id);\n        done(null, result.rows[0]);\n      }\n    } else {\n      let result = await query(`\n        SELECT u.id, u.email FROM user_account AS u\n          LEFT JOIN user_login AS l ON l.user_id = u.id\n        WHERE l.name = $1 AND l.key = $2`, loginName, profile.id);\n      if (result.rowCount) {\n        done(null, result.rows[0]);\n      } else {\n        result = await query('SELECT 1 FROM user_account WHERE email = $1', profile._json.email);\n        if (result.rowCount) {\n          // There is already an account using this email address. Sign in to\n          // that account and link it with Facebook manually from Account Settings.\n          done(null);\n        } else {\n          result = await query(`\n            INSERT INTO user_account (email) VALUES ($1) RETURNING (id)`,\n            profile._json.email\n          );\n          const userId = result.rows[0].id;\n          await query(`\n            INSERT INTO user_login (user_id, name, key) VALUES ($1, 'facebook', $2)`,\n            userId, profile.id);\n          await query(`\n            INSERT INTO user_claim (user_id, type, value) VALUES\n              ($1, 'urn:facebook:access_token', $2);`,\n            userId, accessToken);\n          await query(`\n            INSERT INTO user_profile (user_id, display_name, gender, picture)\n            VALUES ($1, $2, $3, $4);`,\n            userId, profile.displayName, profile._json.gender,\n            `https://graph.facebook.com/${profile.id}/picture?type=large`\n          );\n          result = await query('SELECT id, email FROM user_account WHERE id = $1;', userId);\n          done(null, result.rows[0]);\n        }\n      }\n    }\n  }).catch(done);\n}));\n\nexport default passport;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/src/data/schema.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport {\n  GraphQLSchema as Schema,\n  GraphQLObjectType as ObjectType,\n} from 'graphql';\n\nimport me from './queries/me';\nimport content from './queries/content';\nimport news from './queries/news';\n\nconst schema = new Schema({\n  query: new ObjectType({\n    name: 'Query',\n    fields: {\n      me,\n      content,\n      news,\n    },\n  }),\n});\n\nexport default schema;\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/lib/fetch.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport http from 'http';\n\nexport default async (url) => new Promise((resolve, reject) =>\n    http.get(url, res => resolve(res)).on('error', err => reject(err))\n);\n","/home/travis/build/npmtest/node-npmtest-generator-react-fullstack/node_modules/generator-react-fullstack/react-starter-kit/tools/lib/fs.js":"/**\n * React Starter Kit (https://www.reactstarterkit.com/)\n *\n * Copyright © 2014-2016 Kriasoft, LLC. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport fs from 'fs';\nimport mkdirp from 'mkdirp';\n\nconst writeFile = (file, contents) => new Promise((resolve, reject) => {\n  fs.writeFile(file, contents, 'utf8', err => err ? reject(err) : resolve());\n});\n\nconst makeDir = (name) => new Promise((resolve, reject) => {\n  mkdirp(name, err => err ? reject(err) : resolve());\n});\n\nexport default { writeFile, makeDir };\n"}